{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","text","color","className","style","background","Header","title","onAdd","showAddTask","Task","task","onDelete","onToggle","onMark","reminder","completed","onDoubleClick","id","textDecoration","day","Tasks","tasks","map","AddTask","onAddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","value","onChange","target","type","placeholder","checked","currentTarget","App","props","setShowAddTask","setTasks","useEffect","getTasks","JSON","parse","localStorage","getItem","setItem","stringify","Math","floor","random","newTask","length","filter","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dc81d70.chunk.js","sourcesContent":["\n\nconst Button = ({onClick, text, color}) => {\n    return <button \n    onClick={onClick} \n    className='btn'\n    style={{background: color}}>{text}</button>\n}\n\nexport default Button\n","import Button from \"./Button\"\n\n\nconst Header = ({title, onAdd, showAddTask}) => {\n   \n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button text={showAddTask ? 'Close' : 'Add'} \n                    onClick={onAdd}\n                    color={showAddTask ? 'black' : 'green'}/>\n        </header>\n    )\n}\n\nexport default Header\n\n\n\n","import DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\n\n\nconst Task = ({task, onDelete, onToggle, onMark}) => {\n    return (\n        <div \n         className={`task ${task.reminder && !task.completed ? 'reminder' : ''}`}\n         onDoubleClick={() => onToggle(task.id)}\n         >\n            <h3 style={{textDecoration: task.completed ? ' line-through' : 'none'}}>\n                {task.text}{' '} \n                <div>\n                <CheckCircleOutlineOutlinedIcon style={{color: task.completed ? 'green' : 'white'}}\n                onClick={() => onMark(task.id)}/>\n                <DeleteIcon\n         onClick={() => onDelete(task.id)}/>\n                </div>\n              \n                </h3>\n            <p>{task.day}</p>\n        </div>\n        \n        \n    )\n}\n\nexport default Task\n","import Task from './Task';\n\n\n\nconst Tasks = ({tasks, onDelete, onToggle, onMark}) => {\n\n    return (\n        <>\n           {tasks.map((task) => (\n           <Task onDelete={onDelete} \n                 key={task.id} \n                 task={task}\n                 onToggle={onToggle}\n                 onMark={onMark}/> \n           ))} \n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react';\n\nconst AddTask = ({onAddTask}) => {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n   const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(!text) {\n            alert('Please add task')\n            return\n        }\n        onAddTask({text, day, reminder})\n        setText('');\n        setDay('');\n        setReminder(false);\n    }\n\n    return (\n       <form className='add-form' onSubmit={handleSubmit}>\n <div className='form-control'>\n{/* <label>Task</label> */}\n<input value={text} onChange={(e) => setText(e.target.value)} type='text' placeholder='Add Task'/>\n </div>\n <div className='form-control'>\n{/* <label>Day & Time</label> */}\n<input value={day} onChange={(e) => setDay(e.target.value)}  type='text' placeholder='Add Day & Time'/>\n </div>\n <div className='form-control form-control-check'>\n<label>Set Reminder</label>\n<input checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}  type='checkbox'/>\n </div>\n <input className='btn btn-block' type='submit' value='Add Task'/>\n       </form>\n    )\n}\n\nexport default AddTask\n","import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport {useState, useEffect} from 'react';\nimport AddTask from './components/AddTask';\n\nfunction App(props) {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n\n//Add Task \nconst addTask = (task) => {\nconst id = Math.floor(Math.random() * 10000) + 1;\nconst newTask = {id, ...task}\nsetTasks([...tasks, newTask])\n}\n//Mark Task as completed\nconst markTask = (id) => {\n  console.log(id)\n  setTasks(\n    tasks.map(task =>  task.id === id \n    ? {...task, completed: !task.completed} \n    : task\n    )\n  );\n};\n\n//Delete task\nconst deleteTask = (id) => {\n   setTasks(tasks.filter(task => task.id !== id));\n};\n//Toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map(task =>  task.id === id \n    ? {...task, reminder: !task.reminder} \n    : task\n    )\n  );\n};\n\nuseEffect(() => {\n  const getTasks = JSON.parse(localStorage.getItem('tasks'));\n  if(getTasks) {\n    setTasks(getTasks);\n  }\n  }, []);\n\nuseEffect(() => {\nlocalStorage.setItem('tasks', JSON.stringify(tasks));\n}, [tasks]);\n\n  return (\n   <div className='container'>\n   <Header onAdd={() => setShowAddTask(!showAddTask)} \n   title='Task tracker'\n   showAddTask={showAddTask}/>\n  {showAddTask && <AddTask onAddTask={addTask}/>} \n  {tasks.length > 0 ?  \n   <Tasks \n  onDelete={deleteTask} \n  tasks={tasks}\n  onToggle={toggleReminder}\n  onMark= {markTask}/>\n  : 'No tasks to show'\n  }\n   </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}